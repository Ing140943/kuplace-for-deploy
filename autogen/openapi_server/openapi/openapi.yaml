openapi: 3.0.0
info:
  description: TBA.
  title: KU PLACE API
  version: 1.0.0
servers:
- url: /ku-place
paths:
  /lightlocation/{locationId}:
    get:
      operationId: controller_get_light_location
      parameters:
      - explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LightLocation'
          description: Success
      summary: Provide the latitude and lontitude of light location
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /locations/{locationId}:
    get:
      operationId: controller_get_building_detail
      parameters:
      - explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingFull'
          description: Success
      summary: Return a name of location with their specific latitude and lontitude.
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /pmlocation/{locationId}:
    get:
      operationId: controller_get_average_pm
      parameters:
      - explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PMAverage'
          description: Success
      summary: Provide the average pm
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /securities/{securityId}:
    get:
      operationId: controller_get_security_image
      parameters:
      - explode: false
        in: path
        name: securityId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityImg'
          description: Success
      summary: Return a link of specifi security and provide their latitude and lontitude
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /securitylocation/{locationId}:
    get:
      operationId: controller_get_security_location
      parameters:
      - explode: false
        in: path
        name: locationId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityLocation'
          description: Success
      summary: Provide the nearby light location and security location
      x-openapi-router-controller: openapi_server.controllers.default_controller
components:
  schemas:
    StationShort:
      properties:
        stationId:
          type: integer
        name:
          type: string
      type: object
    TestFromMark:
      properties:
        light:
          type: integer
      type: object
    BuildingFull:
      example:
        lon: 6.027456183070403
        building: building
        lat: 0.8008281904610115
      properties:
        building:
          title: building
          type: string
        lat:
          title: lat
          type: number
        lon:
          description: เดี๋ยวจอมมาใส่
          title: lon
          type: number
      title: BuildingFull
      type: object
    SecurityImg:
      example:
        img_link: img_link
        lon: 6.027456183070403
        lat: 0.8008281904610115
      properties:
        img_link:
          title: img_link
          type: string
        lat:
          title: lat
          type: number
        lon:
          title: lon
          type: number
      title: SecurityImg
      type: object
    SecurityLocation:
      example:
        distance: 5.962133916683182
        img_link: img_link
        lon: 1.4658129805029452
        building: building
        security_id: 0
        lat: 6.027456183070403
      properties:
        building:
          title: building
          type: string
        security_id:
          title: security_id
          type: integer
        img_link:
          title: img_link
          type: string
        lat:
          title: lat
          type: number
        lon:
          title: lon
          type: number
        distance:
          title: distance
          type: number
      title: SecurityLocation
      type: object
    LightLocation:
      example:
        sensor_lat: 0
        value_light: 1
        time: time
        building: building
        sensor_lon: 6
      properties:
        building:
          title: building
          type: string
        sensor_lat:
          title: sensor_lat
          type: integer
        sensor_lon:
          title: sensor_lon
          type: integer
        time:
          title: time
          type: string
        value_light:
          title: value_light
          type: integer
      title: LightLocation
      type: object
    PMAverage:
      example:
        average_pm: 1
        lon: 6
        time: time
        building: building
        lat: 0
      properties:
        building:
          title: building
          type: string
        lat:
          title: lat
          type: integer
        lon:
          title: lon
          type: integer
        time:
          title: time
          type: string
        average_pm:
          title: average_pm
          type: integer
      title: PMAverage
      type: object
