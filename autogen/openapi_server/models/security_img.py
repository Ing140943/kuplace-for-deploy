# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class SecurityImg(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, img_link=None, lat=None, lon=None):  # noqa: E501
        """SecurityImg - a model defined in OpenAPI

        :param img_link: The img_link of this SecurityImg.  # noqa: E501
        :type img_link: str
        :param lat: The lat of this SecurityImg.  # noqa: E501
        :type lat: float
        :param lon: The lon of this SecurityImg.  # noqa: E501
        :type lon: float
        """
        self.openapi_types = {
            'img_link': str,
            'lat': float,
            'lon': float
        }

        self.attribute_map = {
            'img_link': 'img_link',
            'lat': 'lat',
            'lon': 'lon'
        }

        self._img_link = img_link
        self._lat = lat
        self._lon = lon

    @classmethod
    def from_dict(cls, dikt) -> 'SecurityImg':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SecurityImg of this SecurityImg.  # noqa: E501
        :rtype: SecurityImg
        """
        return util.deserialize_model(dikt, cls)

    @property
    def img_link(self):
        """Gets the img_link of this SecurityImg.


        :return: The img_link of this SecurityImg.
        :rtype: str
        """
        return self._img_link

    @img_link.setter
    def img_link(self, img_link):
        """Sets the img_link of this SecurityImg.


        :param img_link: The img_link of this SecurityImg.
        :type img_link: str
        """

        self._img_link = img_link

    @property
    def lat(self):
        """Gets the lat of this SecurityImg.


        :return: The lat of this SecurityImg.
        :rtype: float
        """
        return self._lat

    @lat.setter
    def lat(self, lat):
        """Sets the lat of this SecurityImg.


        :param lat: The lat of this SecurityImg.
        :type lat: float
        """

        self._lat = lat

    @property
    def lon(self):
        """Gets the lon of this SecurityImg.


        :return: The lon of this SecurityImg.
        :rtype: float
        """
        return self._lon

    @lon.setter
    def lon(self, lon):
        """Sets the lon of this SecurityImg.


        :param lon: The lon of this SecurityImg.
        :type lon: float
        """

        self._lon = lon
