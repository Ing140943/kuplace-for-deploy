# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class SecurityLocation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, building=None, security_id=None, img_link=None, lat=None, lon=None, distance=None):  # noqa: E501
        """SecurityLocation - a model defined in OpenAPI

        :param building: The building of this SecurityLocation.  # noqa: E501
        :type building: str
        :param security_id: The security_id of this SecurityLocation.  # noqa: E501
        :type security_id: int
        :param img_link: The img_link of this SecurityLocation.  # noqa: E501
        :type img_link: str
        :param lat: The lat of this SecurityLocation.  # noqa: E501
        :type lat: float
        :param lon: The lon of this SecurityLocation.  # noqa: E501
        :type lon: float
        :param distance: The distance of this SecurityLocation.  # noqa: E501
        :type distance: float
        """
        self.openapi_types = {
            'building': str,
            'security_id': int,
            'img_link': str,
            'lat': float,
            'lon': float,
            'distance': float
        }

        self.attribute_map = {
            'building': 'building',
            'security_id': 'security_id',
            'img_link': 'img_link',
            'lat': 'lat',
            'lon': 'lon',
            'distance': 'distance'
        }

        self._building = building
        self._security_id = security_id
        self._img_link = img_link
        self._lat = lat
        self._lon = lon
        self._distance = distance

    @classmethod
    def from_dict(cls, dikt) -> 'SecurityLocation':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SecurityLocation of this SecurityLocation.  # noqa: E501
        :rtype: SecurityLocation
        """
        return util.deserialize_model(dikt, cls)

    @property
    def building(self):
        """Gets the building of this SecurityLocation.


        :return: The building of this SecurityLocation.
        :rtype: str
        """
        return self._building

    @building.setter
    def building(self, building):
        """Sets the building of this SecurityLocation.


        :param building: The building of this SecurityLocation.
        :type building: str
        """

        self._building = building

    @property
    def security_id(self):
        """Gets the security_id of this SecurityLocation.


        :return: The security_id of this SecurityLocation.
        :rtype: int
        """
        return self._security_id

    @security_id.setter
    def security_id(self, security_id):
        """Sets the security_id of this SecurityLocation.


        :param security_id: The security_id of this SecurityLocation.
        :type security_id: int
        """

        self._security_id = security_id

    @property
    def img_link(self):
        """Gets the img_link of this SecurityLocation.


        :return: The img_link of this SecurityLocation.
        :rtype: str
        """
        return self._img_link

    @img_link.setter
    def img_link(self, img_link):
        """Sets the img_link of this SecurityLocation.


        :param img_link: The img_link of this SecurityLocation.
        :type img_link: str
        """

        self._img_link = img_link

    @property
    def lat(self):
        """Gets the lat of this SecurityLocation.


        :return: The lat of this SecurityLocation.
        :rtype: float
        """
        return self._lat

    @lat.setter
    def lat(self, lat):
        """Sets the lat of this SecurityLocation.


        :param lat: The lat of this SecurityLocation.
        :type lat: float
        """

        self._lat = lat

    @property
    def lon(self):
        """Gets the lon of this SecurityLocation.


        :return: The lon of this SecurityLocation.
        :rtype: float
        """
        return self._lon

    @lon.setter
    def lon(self, lon):
        """Sets the lon of this SecurityLocation.


        :param lon: The lon of this SecurityLocation.
        :type lon: float
        """

        self._lon = lon

    @property
    def distance(self):
        """Gets the distance of this SecurityLocation.


        :return: The distance of this SecurityLocation.
        :rtype: float
        """
        return self._distance

    @distance.setter
    def distance(self, distance):
        """Sets the distance of this SecurityLocation.


        :param distance: The distance of this SecurityLocation.
        :type distance: float
        """

        self._distance = distance
