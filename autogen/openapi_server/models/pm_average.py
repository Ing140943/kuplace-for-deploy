# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class PMAverage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, building=None, lat=None, lon=None, time=None, average_pm=None):  # noqa: E501
        """PMAverage - a model defined in OpenAPI

        :param building: The building of this PMAverage.  # noqa: E501
        :type building: str
        :param lat: The lat of this PMAverage.  # noqa: E501
        :type lat: int
        :param lon: The lon of this PMAverage.  # noqa: E501
        :type lon: int
        :param time: The time of this PMAverage.  # noqa: E501
        :type time: str
        :param average_pm: The average_pm of this PMAverage.  # noqa: E501
        :type average_pm: int
        """
        self.openapi_types = {
            'building': str,
            'lat': int,
            'lon': int,
            'time': str,
            'average_pm': int
        }

        self.attribute_map = {
            'building': 'building',
            'lat': 'lat',
            'lon': 'lon',
            'time': 'time',
            'average_pm': 'average_pm'
        }

        self._building = building
        self._lat = lat
        self._lon = lon
        self._time = time
        self._average_pm = average_pm

    @classmethod
    def from_dict(cls, dikt) -> 'PMAverage':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PMAverage of this PMAverage.  # noqa: E501
        :rtype: PMAverage
        """
        return util.deserialize_model(dikt, cls)

    @property
    def building(self):
        """Gets the building of this PMAverage.


        :return: The building of this PMAverage.
        :rtype: str
        """
        return self._building

    @building.setter
    def building(self, building):
        """Sets the building of this PMAverage.


        :param building: The building of this PMAverage.
        :type building: str
        """

        self._building = building

    @property
    def lat(self):
        """Gets the lat of this PMAverage.


        :return: The lat of this PMAverage.
        :rtype: int
        """
        return self._lat

    @lat.setter
    def lat(self, lat):
        """Sets the lat of this PMAverage.


        :param lat: The lat of this PMAverage.
        :type lat: int
        """

        self._lat = lat

    @property
    def lon(self):
        """Gets the lon of this PMAverage.


        :return: The lon of this PMAverage.
        :rtype: int
        """
        return self._lon

    @lon.setter
    def lon(self, lon):
        """Sets the lon of this PMAverage.


        :param lon: The lon of this PMAverage.
        :type lon: int
        """

        self._lon = lon

    @property
    def time(self):
        """Gets the time of this PMAverage.


        :return: The time of this PMAverage.
        :rtype: str
        """
        return self._time

    @time.setter
    def time(self, time):
        """Sets the time of this PMAverage.


        :param time: The time of this PMAverage.
        :type time: str
        """

        self._time = time

    @property
    def average_pm(self):
        """Gets the average_pm of this PMAverage.


        :return: The average_pm of this PMAverage.
        :rtype: int
        """
        return self._average_pm

    @average_pm.setter
    def average_pm(self, average_pm):
        """Sets the average_pm of this PMAverage.


        :param average_pm: The average_pm of this PMAverage.
        :type average_pm: int
        """

        self._average_pm = average_pm
